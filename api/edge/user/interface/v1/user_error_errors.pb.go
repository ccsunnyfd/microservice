// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

func IsLoginFail(err error) bool {
	e := errors.FromError(err)
	return e.Reason == UserEdgeInterfaceErrorReason_LOGIN_FAIL.String() && e.Code == 401
}

func ErrorLoginFail(format string, args ...interface{}) *errors.Error {
	return errors.New(401, UserEdgeInterfaceErrorReason_LOGIN_FAIL.String(), fmt.Sprintf(format, args...))
}

func IsRegisterFail(err error) bool {
	e := errors.FromError(err)
	return e.Reason == UserEdgeInterfaceErrorReason_REGISTER_FAIL.String() && e.Code == 409
}

func ErrorRegisterFail(format string, args ...interface{}) *errors.Error {
	return errors.New(409, UserEdgeInterfaceErrorReason_REGISTER_FAIL.String(), fmt.Sprintf(format, args...))
}

func IsAuthFail(err error) bool {
	e := errors.FromError(err)
	return e.Reason == UserEdgeInterfaceErrorReason_AUTH_FAIL.String() && e.Code == 403
}

func ErrorAuthFail(format string, args ...interface{}) *errors.Error {
	return errors.New(403, UserEdgeInterfaceErrorReason_AUTH_FAIL.String(), fmt.Sprintf(format, args...))
}
