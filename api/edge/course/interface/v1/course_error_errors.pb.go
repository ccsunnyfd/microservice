// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

func IsAuthFail(err error) bool {
	e := errors.FromError(err)
	return e.Reason == CourseEdgeInterfaceErrorReason_AUTH_FAIL.String() && e.Code == 403
}

func ErrorAuthFail(format string, args ...interface{}) *errors.Error {
	return errors.New(403, CourseEdgeInterfaceErrorReason_AUTH_FAIL.String(), fmt.Sprintf(format, args...))
}

func IsListCoursesFail(err error) bool {
	e := errors.FromError(err)
	return e.Reason == CourseEdgeInterfaceErrorReason_LIST_COURSES_FAIL.String() && e.Code == 404
}

func ErrorListCoursesFail(format string, args ...interface{}) *errors.Error {
	return errors.New(404, CourseEdgeInterfaceErrorReason_LIST_COURSES_FAIL.String(), fmt.Sprintf(format, args...))
}

func IsListTeacherFail(err error) bool {
	e := errors.FromError(err)
	return e.Reason == CourseEdgeInterfaceErrorReason_LIST_TEACHER_FAIL.String() && e.Code == 404
}

func ErrorListTeacherFail(format string, args ...interface{}) *errors.Error {
	return errors.New(404, CourseEdgeInterfaceErrorReason_LIST_TEACHER_FAIL.String(), fmt.Sprintf(format, args...))
}
